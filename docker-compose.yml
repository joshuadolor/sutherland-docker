version: '3'

services:
    api-slg:
        image: api-slg
        container_name: api-slg
        depends_on:
            - db-portal
        build:
            context: ${API_SLG_PATH}
            dockerfile: ${DOCKERFILE}
        volumes:
            - ${API_SLG_PATH}:/src
        ports:
            - ${API_V1_PORT}:${API_V1_PORT}
        environment:
            - PORT=${API_V1_PORT}
            - NODE_ENV=${ENV}
            - CONNECTION_URL=mongodb://db-portal:27017/slg
        restart: 'no'

    api-loi:
        image: api-loi
        container_name: api-loi
        build:
            context: ${API_LOI_PATH}
            dockerfile: ${DOCKERFILE}
        volumes:
            - ${API_LOI_PATH}:/src
        ports:
            - ${API_LOI_V1_PORT}:${API_LOI_V1_PORT}
        environment:
            - PORT=${API_LOI_V1_PORT}
            - CONNECTION_URL=mongodb://db-loi:${DB_LOI_PORT}/loi
            - NODE_ENV=${ENV}
        restart: 'no'
        depends_on:
            - db-loi
    
    api-onboarding:
        image: api-onboarding
        container_name: api-onboarding
        build:
            context: ${API_ONBOARDING_PATH}
            dockerfile: ${DOCKERFILE}
        volumes:
            - ${API_ONBOARDING_PATH}:/src
        ports:
            - ${API_ONBOARDING_V1_PORT}:${API_ONBOARDING_V1_PORT}
        environment:
            - PORT=${API_ONBOARDING_V1_PORT}
            - CONNECTION_URL=mongodb://db-onboarding:${DB_ONBOARDING_PORT}/onboarding
            - NODE_ENV=${ENV}
        restart: 'no'
        depends_on:
            - db-onboarding

    api-id-validator:
        image: api-id-validator
        container_name: api-id-validator
        build:
            context: ${API_ID_VALIDATOR_PATH}
            dockerfile: ${DOCKERFILE}
        volumes:
            - ${API_ID_VALIDATOR_PATH}:/src
        ports:
            - ${API_ID_VALIDATOR_V1_PORT}:${API_ID_VALIDATOR_V1_PORT}
        environment:
            - PORT=${API_ID_VALIDATOR_V1_PORT}
            - NODE_ENV=${ENV}
        restart: 'no'
        depends_on:
            - db-onboarding

    web-portal:
        image: web-portal
        container_name: web-portal
        build:
            context: ${WEB_PORTAL_PATH}
            dockerfile: ${DOCKERFILE}
        depends_on:
            - api-slg
        ports:
            - ${WEB_PORTAL_PORT}:${WEB_PORTAL_PORT}
        volumes:
            - ${WEB_PORTAL_PATH}/dist:/usr/share/nginx/html
        environment:
            - CHOKIDAR_USEPOLLING=true
            - APP_HOSTNAME=${HOSTNAME}/portal
            - PORT=${WEB_PORTAL_PORT}
        restart: 'no'

    web-ofac:
        image: web-ofac
        container_name: web-ofac
        build:
            context: ${WEB_OFAC_PATH}
            dockerfile: ${DOCKERFILE}
        depends_on:
            - api-slg
        ports:
            - ${WEB_OFAC_PORT}:${WEB_OFAC_PORT}
        volumes:
            - ${WEB_OFAC_PATH}/dist:/usr/share/nginx/html
        environment:
            - CHOKIDAR_USEPOLLING=true
            - APP_HOSTNAME=${HOSTNAME}/ofac
            - PORT=${WEB_OFAC_PORT}
        restart: 'no'

    web-onboarding-candidate:
        image: web-onboarding-candidate
        container_name: web-onboarding-candidate
        build:
            context: ${WEB_ONBOARDING_REQUIREMENT_PATH}
            dockerfile: ${DOCKERFILE}
        depends_on:
            - api-onboarding
        ports:
            - ${WEB_ONBOARDING_REQUIREMENT_PORT}:${WEB_ONBOARDING_REQUIREMENT_PORT}
        volumes:
            - ${WEB_ONBOARDING_REQUIREMENT_PATH}/dist:/usr/share/nginx/html
        environment:
            - CHOKIDAR_USEPOLLING=true
            - APP_HOSTNAME=${HOSTNAME}/candidate-requirements
            - PORT=${WEB_ONBOARDING_REQUIREMENT_PORT}
        restart: 'no'

    web-onboarding:
        image: web-onboarding
        container_name: web-onboarding
        build:
            context: ${WEB_ONBOARDING_ADMIN_PATH}
            dockerfile: ${DOCKERFILE}
        depends_on:
            - api-onboarding
        ports:
            - ${WEB_ONBOARDING_ADMIN_PORT}:${WEB_ONBOARDING_ADMIN_PORT}
        volumes:
            - ${WEB_ONBOARDING_ADMIN_PATH}/dist:/usr/share/nginx/html
        environment:
            - CHOKIDAR_USEPOLLING=true
            - APP_HOSTNAME=${HOSTNAME}/candidate-requirements
            - PORT=${WEB_ONBOARDING_ADMIN_PORT}
        restart: 'no'

    web-loi:
        image: web-loi
        container_name: web-loi
        build:
            context: ${WEB_LOI_PATH}
            dockerfile: ${DOCKERFILE}
        depends_on:
            - api-slg
        ports:
            - ${WEB_LOI_PORT}:${WEB_LOI_PORT}
        volumes:
            - ${WEB_LOI_PATH}/dist:/usr/share/nginx/html
        environment:
            - CHOKIDAR_USEPOLLING=true
            - APP_HOSTNAME=${HOSTNAME}/ofac
            - PORT=${WEB_LOI_PORT}
        restart: 'no'

    web-loi-admin:
        image: web-loi-admin
        container_name: web-loi-admin
        build:
            context: ${WEB_LOI_ADMIN_PATH}
            dockerfile: ${DOCKERFILE}
        depends_on:
            - api-slg
        ports:
            - ${WEB_LOI_ADMIN_PORT}:${WEB_LOI_ADMIN_PORT}
        volumes:
            - ${WEB_LOI_ADMIN_PATH}/dist:/usr/share/nginx/html
        environment:
            - CHOKIDAR_USEPOLLING=true
            - PORT=${WEB_LOI_ADMIN_PORT}
        restart: 'no'

    web-id-validator:
        image: web-id-validator
        container_name: web-id-validator
        build:
            context: ${WEB_ID_VALIDATOR_PATH}
            dockerfile: ${DOCKERFILE}
        depends_on:
            - api-slg
        ports:
            - ${WEB_ID_VALIDATOR_PORT}:${WEB_ID_VALIDATOR_PORT}
        volumes:
            - ${WEB_ID_VALIDATOR_PATH}/dist:/usr/share/nginx/html
        environment:
            - CHOKIDAR_USEPOLLING=true
            - APP_HOSTNAME=${HOSTNAME}/id-validator
            - PORT=${WEB_ID_VALIDATOR_PORT}
        restart: 'no'

    db-portal:
        container_name: db-portal
        image: mongo
        ports:
            - 27018:27017
        volumes:
            - ./portal/mongodb/mongod.conf:/etc/mongod.conf
            - ./portal/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
            - ./portal/mongodb/data/db/:/data/db/
            - ./portal/mongodb/data/log/:/var/log/mongodb/
        command: mongod --quiet --logpath /dev/null
        restart: 'no'
        
    db-loi:
        container_name: db-loi
        image: mongo
        ports:
            - ${DB_LOI_PORT}:${DB_LOI_PORT}
        volumes:
            - ./loi/mongodb/mongod.conf:/etc/mongod.conf
            - ./loi/mongodb/initdb.d/:/docker-entrypoint-initdb.d/
            - ./loi/mongodb/data/db/:/data/db/
            - ./loi/mongodb/data/log/:/var/log/mongodb/
        command: mongod --port ${DB_LOI_PORT} --quiet --logpath /dev/null
        restart: 'no'

    db-onboarding:
        container_name: db-onboarding
        image: mongo
        ports:
            - ${DB_ONBOARDING_PORT}:${DB_ONBOARDING_PORT}
        volumes:
            - ./mongodb/onboarding/mongod.conf:/etc/mongod.conf
            - ./mongodb/onboarding/initdb.d/:/docker-entrypoint-initdb.d/
            - ./mongodb/onboarding/data/db/:/data/db/
            - ./mongodb/onboarding/data/log/:/var/log/mongodb/
        command: mongod --port ${DB_ONBOARDING_PORT} --quiet --logpath /dev/null
        restart: 'no'

    reverse-proxy:
        image: nginx:1.17.10
        container_name: reverse-proxy
        depends_on:
            - api-slg
            - api-loi
            - web-portal
            - web-ofac
            - web-loi
            - web-loi-admin
            - db-portal
            - db-loi
        environment:
            - API_V1_PORT=${API_V1_PORT}
        volumes:
            - ./reverse-proxy/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./reverse-proxy/upstream:/etc/nginx/conf.d/upstream
            - ./reverse-proxy/logs:/var/log/nginx
        ports:
            - ${PROXY_EXPOSE_PORT}:80
        restart: 'no'
